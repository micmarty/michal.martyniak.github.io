"use strict";var expect=buster.expect;buster.spec.expose(),describe("jquery.rss",function(){before(function(){var t=this;this.element=$("<div>").appendTo($("body")),this.timeout=1e4,this.feedUrl="http://xml-rss.de/xml/site-atom.xml",this.fakeGetJSON=function(e){t.originalGetJSON=$.getJSON,$.getJSON=function(t,i){i({responseData:{feed:{entries:[{content:e,contentSnippet:e}]}}})}}}),after(function(){"function"==typeof this.originalGetJSON&&($.getJSON=this.originalGetJSON,this.originalGetJSON=null)}),it("renders an unordered list by default",function(t){var e=this.element;e.rss(this.feedUrl,{},function(){var i=e.html().replace(/\n/g,"");expect(i).toMatch(/<ul>.*<\/ul>/),t()})}),it("renders 2 list entries if limit is set to 2",function(t){var e=this.element;e.rss(this.feedUrl,{limit:2},function(){expect($("li",e).length).toEqual(2),t()})}),it("renders the defined entry template",function(t){var e=this.element;e.rss(this.feedUrl,{limit:1,entryTemplate:"<li>foo</li>"},function(){var i=e.html().split("\n").map(function(t){return t.trim()}).join("").trim();expect(i).toMatch(/<ul><li>foo<\/li><\/ul>/),t()})}),it("renders the defined layout template",function(t){var e=this.element;e.rss(this.feedUrl,{limit:1,layoutTemplate:"foo<ul>{entries}</ul>bar"},function(){var i=e.html().replace(/\n/g,"");expect(i).toMatch(/foo<ul>.*<\/ul>/),t()})}),it("supports custom tokens",function(t){var e=this.element;e.rss(this.feedUrl,{limit:1,entryTemplate:"<li>{myCustomStaticToken} {myCustomDynamicToken}</li>",tokens:{myCustomStaticToken:"static",myCustomDynamicToken:function(){return"dynamic"}}},function(){var i=e.html().split("\n").map(function(t){return t.trim()}).join("").trim();expect(i).toMatch(new RegExp("<ul><li>static dynamic</li></ul>")),t()})}),it("removes p-tags but not the content",function(t){var e=this.element;this.fakeGetJSON("<p>May the fourth be with you!</p>"),e.rss(this.feedUrl,{limit:1,entryTemplate:"<li>{bodyPlain}</li>"},function(){var i=e.html().split("\n").map(function(t){return t.trim()}).join("").trim();expect(i).toMatch(/<ul><li>May the fourth be with you!<\/li><\/ul>/),t()})}),it("calls the error callback if something went wrong",function(t){this.element.rss("https://google.com",{error:function(){expect(1).toEqual(1),t()}})}),it("calls the success callback",function(t){this.element.rss(this.feedUrl,{limit:1,layoutTemplate:"fnord",success:function(){expect(1).toEqual(1),t()}})}),it("renders the defined entry template in the layout template",function(t){var e=this.element;e.rss(this.feedUrl,{limit:1,entryTemplate:"<li>bazinga</li>",layoutTemplate:"<ul><li>topic</li>{entries}</ul>"},function(){var i=e.html().replace(/\n/g,"");expect(i).toEqual("<ul><li>topic</li><li>bazinga</li></ul>"),t()})}),describe("ssl",function(){it("rewrites the host to herokuapp.com if not specified differently",function(t){this.ajaxStub=this.stub($,"getJSON",function(e){expect(e).toMatch(/https:\/\/feedrapp\.herokuapp\.com/),t()}),this.element.rss(this.feedUrl,{ssl:!0})}),it("uses feedrapp.info if ssl is turned off",function(t){this.ajaxStub=this.stub($,"getJSON",function(e){expect(e).toMatch(/http:\/\/www\.feedrapp\.info/),t()}),this.element.rss(this.feedUrl,{ssl:!1})}),it("does not overwrite the host if it was specified manually",function(t){this.ajaxStub=this.stub($,"getJSON",function(e){expect(e).toMatch(/https:\/\/foo\.com/),t()}),this.element.rss(this.feedUrl,{ssl:!0,host:"foo.com"})})}),describe("tokens",function(){describe("> feed",function(){it("returns all feed tokens but entries",function(t){var e=this.element;e.rss(this.feedUrl,{limit:1,entryTemplate:"<li>{something}</li>",layoutTemplate:"<ul>{entries}</ul>",tokens:{something:function(t,e){return expect(e.feed.entries).not.toBeDefined(),e.feed.title}}},function(){var i=e.html().replace(/\n/g,"");expect(i).toEqual("<ul><li>XML-RSS.de Website-Feed</li></ul>"),t()})})}),describe("> bodyPlain",function(){describe("> XSS >",function(){after(function(t){var e=this.element;e.rss(this.feedUrl,{limit:1,entryTemplate:"<li>{bodyPlain}</li>"},function(){var i=e.html().split("\n").map(function(t){return t.trim()}).join("").trim();expect(i).toMatch(/<ul><li><\/li><\/ul>/),t()})}),it("removes script tags if they are plain",function(){this.fakeGetJSON("<script>alert(1)</script>")}),it("removes script tags with attributes",function(){this.fakeGetJSON('<script type="text/javascript">alert(1)</script>')}),it("removes script tags with capital letters",function(){this.fakeGetJSON("<SCRIPT SRC=http://ha.ckers.org/xss.js>hallo</SCRIPT>")}),it("strips unsecure image tags with embedded linebreak",function(){this.fakeGetJSON("<IMG SRC=\"jav&#x09;ascript:alert('XSS');\">")}),it("strips unsecure image tags with embedded carriage return",function(){this.fakeGetJSON("<IMG SRC=\"jav&#x0D;ascript:alert('XSS');\">")}),it("strips unsecure image tags with real carriage return",function(){this.fakeGetJSON("<IMG\nSRC\n=\n\"\nj\na\nv\na\ns\nc\nr\ni\np\nt\n:\na\nl\ne\nr\nt\n(\n'\nX\nS\nS\n'\n)\n\"\n>\n")}),it("strips unsecure image tags with \0 in 'javascript'",function(){this.fakeGetJSON('<IMG SRC=java\0script:alert("XSS")>')}),it("strips unsecure image tags with meta char before javascript tag",function(){this.fakeGetJSON("<IMG SRC=\" &#14;  javascript:alert('XSS');\">")}),it("strips script/xss tags",function(){this.fakeGetJSON('<SCRIPT/XSS SRC="http://ha.ckers.org/xss.js"></SCRIPT>')}),it("strips script/src tags",function(){this.fakeGetJSON('<SCRIPT/SRC="http://ha.ckers.org/xss.js"></SCRIPT>')}),it("strips unsecure body tag",function(){this.fakeGetJSON('<BODY onload!#$%&()*~+-_.,:;?@[/|]^`=alert("XSS")>')}),it("strips the unclosed script tag",function(){this.fakeGetJSON("<SCRIPT SRC=http://ha.ckers.org/xss.js?<B>")}),it("strips unclosed script tags without protocol in src",function(){this.fakeGetJSON("<SCRIPT SRC=//ha.ckers.org/.j>")}),it("strips script tags with line breaks in between",function(){this.fakeGetJSON("<SCRIPT>a=/XSS/\nalert(a.source)</SCRIPT>")}),it("strips script tags when the come after a closing title tag",function(){this.fakeGetJSON('</TITLE><SCRIPT>alert("XSS");</SCRIPT>')}),it("strips input tags with javascript in src attribute",function(){this.fakeGetJSON('<INPUT TYPE="IMAGE" SRC="javascript:alert(\'XSS\');">')}),it("strips body tag with background attribute",function(){this.fakeGetJSON("<BODY BACKGROUND=\"javascript:alert('XSS')\">")}),it("strips body tag with onload attribute",function(){this.fakeGetJSON("<BODY ONLOAD=alert('XSS')>")}),it("strips tags with html quotation",function(){this.fakeGetJSON('<SCRIPT a=">" SRC="http://ha.ckers.org/xss.js"></SCRIPT>')})}),describe("> XSS 2 >",function(){[{name:"strips unsecure image tags with \0 in 'script'",test:'<SCR\0IPT>alert("XSS")</SCR\0IPT>',result:'alert("XSS")'},{name:"strips script tags with extraneous open brackets",test:'<<SCRIPT>alert("XSS");//<</SCRIPT>',result:"&lt;"},{name:"strips half open html/javascript xss vector",test:"<IMG SRC=\"javascript:alert('XSS')\"",result:" SRC=\"javascript:alert('XSS')\""},{name:"strips half open iframe tags",test:"<iFraMe SRC=\"javascript:alert('XSS')\"",result:" SRC=\"javascript:alert('XSS')\""},{name:"strips half open iframe tag with double open bracket",test:"<iframe src=http://ha.ckers.org/scriptlet.html <",result:" src=http://ha.ckers.org/scriptlet.html &lt;"},{name:"strips meta tags with content",test:'<META HTTP-EQUIV="Link" Content="<http://ha.ckers.org/xss.css>; REL=stylesheet">',result:'; REL=stylesheet"&gt;'}].forEach(function(t){it(t.name,function(e){var i=this.element,s=this;this.fakeGetJSON(t.test),i.rss(this.feedUrl,{limit:1,entryTemplate:"<li>{bodyPlain}</li>"},function(){$.getJSON=s.originalGetJSON;var n=i.html().split("\n").map(function(t){return t.trim()}).join("").trim();expect(n).toEqual("<ul><li>"+t.result+"</li></ul>"),e()})})})})}),describe("> date",function(){it("renders english dates by default",function(t){var e=this.element;e.rss(this.feedUrl,{},function(){var i=e.html().replace(/\n/g,"");expect(i).toMatch(/<a href=".*">\[.*Saturday May 22nd\] RSS<\/a>/),t()})}),it("renders german dates if enabled",function(t){var e=this.element;e.rss(this.feedUrl,{dateLocale:"de"},function(){var i=e.html().replace(/\n/g,"");expect(i).toMatch(/<a href=".*">\[.*Samstag Mai 22\.\] RSS<\/a>/),t()})})})})});